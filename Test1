
class A:
    empCount = 0
    
    @staticmethod
    def displayCount():
        print ('Total obj -', A.empCount, '\n')
    
    def __new__(cls, *args):
        A.empCount += 1
        #return object.__new__(cls)
        return super(A, cls).__new__(cls)
    
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
        
    def __del__(self):
        A.empCount -= 1
        
    def displayEmployee(self):
        print ('My namy is ', self.name,  ', Salary: %d' % self.salary, sep = '')

class B(A):

    def __init__(self, name, salary, bonus = None):
        super().__init__(name, salary)
        if bonus is not None:
            self.bonus = bonus
        else:
            self.bonus = 0
     
    def displayEmployee(self):
        print ('My namy is ', self.name,  ', Salary: %d' % self.salary, ', Bonus: %d' % self.bonus, sep = '')
        
class C(B):
    
    def displayEmployee(self):
        print ('My namy is ', self.name, sep = '')
        
def print_list(list):
    
    for i in range(len(list)):
        list[i].displayEmployee()
    
    A.displayCount()
    
List = list()

List.append(A('Zara', 2000))
List.append(B('Tom', 5000, 1000))
List.append(B('Ted', 4000))
List.append(C('Zed', 10000, 2000))

#obj1 = A('Zara', 2000)
#obj2= B('Tom', 5000, 1000)
#list = (obj1, obj2)

print_list(List)

List.pop(2) 

print_list(List)
